// Generated by view binder compiler. Do not edit!
package com.simplemobiletools.notes.pro.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.simplemobiletools.commons.views.MyFloatingActionButton;
import com.simplemobiletools.commons.views.MyRecyclerView;
import com.simplemobiletools.notes.pro.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DialogOpenNoteBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final CoordinatorLayout dialogOpenNoteHolder;

  @NonNull
  public final MyRecyclerView dialogOpenNoteList;

  @NonNull
  public final MyFloatingActionButton newNoteFab;

  private DialogOpenNoteBinding(@NonNull CoordinatorLayout rootView,
      @NonNull CoordinatorLayout dialogOpenNoteHolder, @NonNull MyRecyclerView dialogOpenNoteList,
      @NonNull MyFloatingActionButton newNoteFab) {
    this.rootView = rootView;
    this.dialogOpenNoteHolder = dialogOpenNoteHolder;
    this.dialogOpenNoteList = dialogOpenNoteList;
    this.newNoteFab = newNoteFab;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogOpenNoteBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogOpenNoteBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_open_note, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogOpenNoteBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      CoordinatorLayout dialogOpenNoteHolder = (CoordinatorLayout) rootView;

      id = R.id.dialog_open_note_list;
      MyRecyclerView dialogOpenNoteList = ViewBindings.findChildViewById(rootView, id);
      if (dialogOpenNoteList == null) {
        break missingId;
      }

      id = R.id.new_note_fab;
      MyFloatingActionButton newNoteFab = ViewBindings.findChildViewById(rootView, id);
      if (newNoteFab == null) {
        break missingId;
      }

      return new DialogOpenNoteBinding((CoordinatorLayout) rootView, dialogOpenNoteHolder,
          dialogOpenNoteList, newNoteFab);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
