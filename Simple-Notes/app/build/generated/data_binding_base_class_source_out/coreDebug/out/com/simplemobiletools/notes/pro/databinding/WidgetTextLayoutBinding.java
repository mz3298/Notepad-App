// Generated by view binder compiler. Do not edit!
package com.simplemobiletools.notes.pro.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.simplemobiletools.notes.pro.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class WidgetTextLayoutBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final TextView widgetTextCenter;

  @NonNull
  public final TextView widgetTextCenterMonospace;

  @NonNull
  public final RelativeLayout widgetTextHolder;

  @NonNull
  public final TextView widgetTextLeft;

  @NonNull
  public final TextView widgetTextLeftMonospace;

  @NonNull
  public final TextView widgetTextRight;

  @NonNull
  public final TextView widgetTextRightMonospace;

  private WidgetTextLayoutBinding(@NonNull RelativeLayout rootView,
      @NonNull TextView widgetTextCenter, @NonNull TextView widgetTextCenterMonospace,
      @NonNull RelativeLayout widgetTextHolder, @NonNull TextView widgetTextLeft,
      @NonNull TextView widgetTextLeftMonospace, @NonNull TextView widgetTextRight,
      @NonNull TextView widgetTextRightMonospace) {
    this.rootView = rootView;
    this.widgetTextCenter = widgetTextCenter;
    this.widgetTextCenterMonospace = widgetTextCenterMonospace;
    this.widgetTextHolder = widgetTextHolder;
    this.widgetTextLeft = widgetTextLeft;
    this.widgetTextLeftMonospace = widgetTextLeftMonospace;
    this.widgetTextRight = widgetTextRight;
    this.widgetTextRightMonospace = widgetTextRightMonospace;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static WidgetTextLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static WidgetTextLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.widget_text_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static WidgetTextLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.widget_text_center;
      TextView widgetTextCenter = ViewBindings.findChildViewById(rootView, id);
      if (widgetTextCenter == null) {
        break missingId;
      }

      id = R.id.widget_text_center_monospace;
      TextView widgetTextCenterMonospace = ViewBindings.findChildViewById(rootView, id);
      if (widgetTextCenterMonospace == null) {
        break missingId;
      }

      RelativeLayout widgetTextHolder = (RelativeLayout) rootView;

      id = R.id.widget_text_left;
      TextView widgetTextLeft = ViewBindings.findChildViewById(rootView, id);
      if (widgetTextLeft == null) {
        break missingId;
      }

      id = R.id.widget_text_left_monospace;
      TextView widgetTextLeftMonospace = ViewBindings.findChildViewById(rootView, id);
      if (widgetTextLeftMonospace == null) {
        break missingId;
      }

      id = R.id.widget_text_right;
      TextView widgetTextRight = ViewBindings.findChildViewById(rootView, id);
      if (widgetTextRight == null) {
        break missingId;
      }

      id = R.id.widget_text_right_monospace;
      TextView widgetTextRightMonospace = ViewBindings.findChildViewById(rootView, id);
      if (widgetTextRightMonospace == null) {
        break missingId;
      }

      return new WidgetTextLayoutBinding((RelativeLayout) rootView, widgetTextCenter,
          widgetTextCenterMonospace, widgetTextHolder, widgetTextLeft, widgetTextLeftMonospace,
          widgetTextRight, widgetTextRightMonospace);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
