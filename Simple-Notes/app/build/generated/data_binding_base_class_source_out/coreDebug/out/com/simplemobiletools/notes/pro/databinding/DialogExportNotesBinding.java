// Generated by view binder compiler. Do not edit!
package com.simplemobiletools.notes.pro.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.ScrollView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.textfield.TextInputEditText;
import com.simplemobiletools.commons.views.MyTextInputLayout;
import com.simplemobiletools.notes.pro.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DialogExportNotesBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final TextInputEditText exportNotesFilename;

  @NonNull
  public final MyTextInputLayout exportNotesFilenameHint;

  @NonNull
  public final LinearLayout exportNotesHolder;

  @NonNull
  public final ScrollView exportNotesScrollview;

  private DialogExportNotesBinding(@NonNull ScrollView rootView,
      @NonNull TextInputEditText exportNotesFilename,
      @NonNull MyTextInputLayout exportNotesFilenameHint, @NonNull LinearLayout exportNotesHolder,
      @NonNull ScrollView exportNotesScrollview) {
    this.rootView = rootView;
    this.exportNotesFilename = exportNotesFilename;
    this.exportNotesFilenameHint = exportNotesFilenameHint;
    this.exportNotesHolder = exportNotesHolder;
    this.exportNotesScrollview = exportNotesScrollview;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogExportNotesBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogExportNotesBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_export_notes, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogExportNotesBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.export_notes_filename;
      TextInputEditText exportNotesFilename = ViewBindings.findChildViewById(rootView, id);
      if (exportNotesFilename == null) {
        break missingId;
      }

      id = R.id.export_notes_filename_hint;
      MyTextInputLayout exportNotesFilenameHint = ViewBindings.findChildViewById(rootView, id);
      if (exportNotesFilenameHint == null) {
        break missingId;
      }

      id = R.id.export_notes_holder;
      LinearLayout exportNotesHolder = ViewBindings.findChildViewById(rootView, id);
      if (exportNotesHolder == null) {
        break missingId;
      }

      ScrollView exportNotesScrollview = (ScrollView) rootView;

      return new DialogExportNotesBinding((ScrollView) rootView, exportNotesFilename,
          exportNotesFilenameHint, exportNotesHolder, exportNotesScrollview);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
