// Generated by view binder compiler. Do not edit!
package com.simplemobiletools.notes.pro.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.core.widget.NestedScrollView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.appbar.MaterialToolbar;
import com.simplemobiletools.commons.views.MyAppCompatCheckbox;
import com.simplemobiletools.commons.views.MyTextView;
import com.simplemobiletools.notes.pro.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivitySettingsBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final MyAppCompatCheckbox settingsAutosaveNotes;

  @NonNull
  public final RelativeLayout settingsAutosaveNotesHolder;

  @NonNull
  public final TextView settingsBackupsLabel;

  @NonNull
  public final MyAppCompatCheckbox settingsClickableLinks;

  @NonNull
  public final RelativeLayout settingsClickableLinksHolder;

  @NonNull
  public final View settingsColorCustomizationDivider;

  @NonNull
  public final ConstraintLayout settingsColorCustomizationHolder;

  @NonNull
  public final MyTextView settingsColorCustomizationLabel;

  @NonNull
  public final TextView settingsColorCustomizationSectionLabel;

  @NonNull
  public final CoordinatorLayout settingsCoordinator;

  @NonNull
  public final MyAppCompatCheckbox settingsCursorPlacement;

  @NonNull
  public final RelativeLayout settingsCursorPlacementHolder;

  @NonNull
  public final MyAppCompatCheckbox settingsDisplaySuccess;

  @NonNull
  public final RelativeLayout settingsDisplaySuccessHolder;

  @NonNull
  public final MyAppCompatCheckbox settingsEnableAutomaticBackups;

  @NonNull
  public final RelativeLayout settingsEnableAutomaticBackupsHolder;

  @NonNull
  public final MyAppCompatCheckbox settingsEnableLineWrap;

  @NonNull
  public final RelativeLayout settingsEnableLineWrapHolder;

  @NonNull
  public final RelativeLayout settingsExportNotesHolder;

  @NonNull
  public final MyTextView settingsExportNotesLabel;

  @NonNull
  public final MyTextView settingsFontSize;

  @NonNull
  public final RelativeLayout settingsFontSizeHolder;

  @NonNull
  public final MyTextView settingsFontSizeLabel;

  @NonNull
  public final View settingsGeneralSettingsDivider;

  @NonNull
  public final TextView settingsGeneralSettingsLabel;

  @NonNull
  public final MyTextView settingsGravity;

  @NonNull
  public final RelativeLayout settingsGravityHolder;

  @NonNull
  public final MyTextView settingsGravityLabel;

  @NonNull
  public final LinearLayout settingsHolder;

  @NonNull
  public final RelativeLayout settingsImportNotesHolder;

  @NonNull
  public final MyTextView settingsImportNotesLabel;

  @NonNull
  public final MyTextView settingsLanguage;

  @NonNull
  public final RelativeLayout settingsLanguageHolder;

  @NonNull
  public final MyTextView settingsLanguageLabel;

  @NonNull
  public final MyTextView settingsManageAutomaticBackups;

  @NonNull
  public final RelativeLayout settingsManageAutomaticBackupsHolder;

  @NonNull
  public final View settingsMigratingDivider;

  @NonNull
  public final TextView settingsMigratingLabel;

  @NonNull
  public final MyAppCompatCheckbox settingsMonospacedFont;

  @NonNull
  public final RelativeLayout settingsMonospacedFontHolder;

  @NonNull
  public final NestedScrollView settingsNestedScrollview;

  @NonNull
  public final View settingsSavingDivider;

  @NonNull
  public final TextView settingsSavingLabel;

  @NonNull
  public final MyAppCompatCheckbox settingsShowKeyboard;

  @NonNull
  public final RelativeLayout settingsShowKeyboardHolder;

  @NonNull
  public final MyAppCompatCheckbox settingsShowNotePicker;

  @NonNull
  public final RelativeLayout settingsShowNotePickerHolder;

  @NonNull
  public final MyAppCompatCheckbox settingsShowWordCount;

  @NonNull
  public final RelativeLayout settingsShowWordCountHolder;

  @NonNull
  public final View settingsStartupDivider;

  @NonNull
  public final TextView settingsStartupLabel;

  @NonNull
  public final View settingsTextDivider;

  @NonNull
  public final TextView settingsTextLabel;

  @NonNull
  public final MaterialToolbar settingsToolbar;

  @NonNull
  public final MyAppCompatCheckbox settingsUseEnglish;

  @NonNull
  public final RelativeLayout settingsUseEnglishHolder;

  @NonNull
  public final MyAppCompatCheckbox settingsUseIncognitoMode;

  @NonNull
  public final RelativeLayout settingsUseIncognitoModeHolder;

  @NonNull
  public final ConstraintLayout settingsWidgetColorCustomizationHolder;

  @NonNull
  public final MyTextView settingsWidgetColorCustomizationLabel;

  private ActivitySettingsBinding(@NonNull CoordinatorLayout rootView,
      @NonNull MyAppCompatCheckbox settingsAutosaveNotes,
      @NonNull RelativeLayout settingsAutosaveNotesHolder, @NonNull TextView settingsBackupsLabel,
      @NonNull MyAppCompatCheckbox settingsClickableLinks,
      @NonNull RelativeLayout settingsClickableLinksHolder,
      @NonNull View settingsColorCustomizationDivider,
      @NonNull ConstraintLayout settingsColorCustomizationHolder,
      @NonNull MyTextView settingsColorCustomizationLabel,
      @NonNull TextView settingsColorCustomizationSectionLabel,
      @NonNull CoordinatorLayout settingsCoordinator,
      @NonNull MyAppCompatCheckbox settingsCursorPlacement,
      @NonNull RelativeLayout settingsCursorPlacementHolder,
      @NonNull MyAppCompatCheckbox settingsDisplaySuccess,
      @NonNull RelativeLayout settingsDisplaySuccessHolder,
      @NonNull MyAppCompatCheckbox settingsEnableAutomaticBackups,
      @NonNull RelativeLayout settingsEnableAutomaticBackupsHolder,
      @NonNull MyAppCompatCheckbox settingsEnableLineWrap,
      @NonNull RelativeLayout settingsEnableLineWrapHolder,
      @NonNull RelativeLayout settingsExportNotesHolder,
      @NonNull MyTextView settingsExportNotesLabel, @NonNull MyTextView settingsFontSize,
      @NonNull RelativeLayout settingsFontSizeHolder, @NonNull MyTextView settingsFontSizeLabel,
      @NonNull View settingsGeneralSettingsDivider, @NonNull TextView settingsGeneralSettingsLabel,
      @NonNull MyTextView settingsGravity, @NonNull RelativeLayout settingsGravityHolder,
      @NonNull MyTextView settingsGravityLabel, @NonNull LinearLayout settingsHolder,
      @NonNull RelativeLayout settingsImportNotesHolder,
      @NonNull MyTextView settingsImportNotesLabel, @NonNull MyTextView settingsLanguage,
      @NonNull RelativeLayout settingsLanguageHolder, @NonNull MyTextView settingsLanguageLabel,
      @NonNull MyTextView settingsManageAutomaticBackups,
      @NonNull RelativeLayout settingsManageAutomaticBackupsHolder,
      @NonNull View settingsMigratingDivider, @NonNull TextView settingsMigratingLabel,
      @NonNull MyAppCompatCheckbox settingsMonospacedFont,
      @NonNull RelativeLayout settingsMonospacedFontHolder,
      @NonNull NestedScrollView settingsNestedScrollview, @NonNull View settingsSavingDivider,
      @NonNull TextView settingsSavingLabel, @NonNull MyAppCompatCheckbox settingsShowKeyboard,
      @NonNull RelativeLayout settingsShowKeyboardHolder,
      @NonNull MyAppCompatCheckbox settingsShowNotePicker,
      @NonNull RelativeLayout settingsShowNotePickerHolder,
      @NonNull MyAppCompatCheckbox settingsShowWordCount,
      @NonNull RelativeLayout settingsShowWordCountHolder, @NonNull View settingsStartupDivider,
      @NonNull TextView settingsStartupLabel, @NonNull View settingsTextDivider,
      @NonNull TextView settingsTextLabel, @NonNull MaterialToolbar settingsToolbar,
      @NonNull MyAppCompatCheckbox settingsUseEnglish,
      @NonNull RelativeLayout settingsUseEnglishHolder,
      @NonNull MyAppCompatCheckbox settingsUseIncognitoMode,
      @NonNull RelativeLayout settingsUseIncognitoModeHolder,
      @NonNull ConstraintLayout settingsWidgetColorCustomizationHolder,
      @NonNull MyTextView settingsWidgetColorCustomizationLabel) {
    this.rootView = rootView;
    this.settingsAutosaveNotes = settingsAutosaveNotes;
    this.settingsAutosaveNotesHolder = settingsAutosaveNotesHolder;
    this.settingsBackupsLabel = settingsBackupsLabel;
    this.settingsClickableLinks = settingsClickableLinks;
    this.settingsClickableLinksHolder = settingsClickableLinksHolder;
    this.settingsColorCustomizationDivider = settingsColorCustomizationDivider;
    this.settingsColorCustomizationHolder = settingsColorCustomizationHolder;
    this.settingsColorCustomizationLabel = settingsColorCustomizationLabel;
    this.settingsColorCustomizationSectionLabel = settingsColorCustomizationSectionLabel;
    this.settingsCoordinator = settingsCoordinator;
    this.settingsCursorPlacement = settingsCursorPlacement;
    this.settingsCursorPlacementHolder = settingsCursorPlacementHolder;
    this.settingsDisplaySuccess = settingsDisplaySuccess;
    this.settingsDisplaySuccessHolder = settingsDisplaySuccessHolder;
    this.settingsEnableAutomaticBackups = settingsEnableAutomaticBackups;
    this.settingsEnableAutomaticBackupsHolder = settingsEnableAutomaticBackupsHolder;
    this.settingsEnableLineWrap = settingsEnableLineWrap;
    this.settingsEnableLineWrapHolder = settingsEnableLineWrapHolder;
    this.settingsExportNotesHolder = settingsExportNotesHolder;
    this.settingsExportNotesLabel = settingsExportNotesLabel;
    this.settingsFontSize = settingsFontSize;
    this.settingsFontSizeHolder = settingsFontSizeHolder;
    this.settingsFontSizeLabel = settingsFontSizeLabel;
    this.settingsGeneralSettingsDivider = settingsGeneralSettingsDivider;
    this.settingsGeneralSettingsLabel = settingsGeneralSettingsLabel;
    this.settingsGravity = settingsGravity;
    this.settingsGravityHolder = settingsGravityHolder;
    this.settingsGravityLabel = settingsGravityLabel;
    this.settingsHolder = settingsHolder;
    this.settingsImportNotesHolder = settingsImportNotesHolder;
    this.settingsImportNotesLabel = settingsImportNotesLabel;
    this.settingsLanguage = settingsLanguage;
    this.settingsLanguageHolder = settingsLanguageHolder;
    this.settingsLanguageLabel = settingsLanguageLabel;
    this.settingsManageAutomaticBackups = settingsManageAutomaticBackups;
    this.settingsManageAutomaticBackupsHolder = settingsManageAutomaticBackupsHolder;
    this.settingsMigratingDivider = settingsMigratingDivider;
    this.settingsMigratingLabel = settingsMigratingLabel;
    this.settingsMonospacedFont = settingsMonospacedFont;
    this.settingsMonospacedFontHolder = settingsMonospacedFontHolder;
    this.settingsNestedScrollview = settingsNestedScrollview;
    this.settingsSavingDivider = settingsSavingDivider;
    this.settingsSavingLabel = settingsSavingLabel;
    this.settingsShowKeyboard = settingsShowKeyboard;
    this.settingsShowKeyboardHolder = settingsShowKeyboardHolder;
    this.settingsShowNotePicker = settingsShowNotePicker;
    this.settingsShowNotePickerHolder = settingsShowNotePickerHolder;
    this.settingsShowWordCount = settingsShowWordCount;
    this.settingsShowWordCountHolder = settingsShowWordCountHolder;
    this.settingsStartupDivider = settingsStartupDivider;
    this.settingsStartupLabel = settingsStartupLabel;
    this.settingsTextDivider = settingsTextDivider;
    this.settingsTextLabel = settingsTextLabel;
    this.settingsToolbar = settingsToolbar;
    this.settingsUseEnglish = settingsUseEnglish;
    this.settingsUseEnglishHolder = settingsUseEnglishHolder;
    this.settingsUseIncognitoMode = settingsUseIncognitoMode;
    this.settingsUseIncognitoModeHolder = settingsUseIncognitoModeHolder;
    this.settingsWidgetColorCustomizationHolder = settingsWidgetColorCustomizationHolder;
    this.settingsWidgetColorCustomizationLabel = settingsWidgetColorCustomizationLabel;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivitySettingsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivitySettingsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_settings, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivitySettingsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.settings_autosave_notes;
      MyAppCompatCheckbox settingsAutosaveNotes = ViewBindings.findChildViewById(rootView, id);
      if (settingsAutosaveNotes == null) {
        break missingId;
      }

      id = R.id.settings_autosave_notes_holder;
      RelativeLayout settingsAutosaveNotesHolder = ViewBindings.findChildViewById(rootView, id);
      if (settingsAutosaveNotesHolder == null) {
        break missingId;
      }

      id = R.id.settings_backups_label;
      TextView settingsBackupsLabel = ViewBindings.findChildViewById(rootView, id);
      if (settingsBackupsLabel == null) {
        break missingId;
      }

      id = R.id.settings_clickable_links;
      MyAppCompatCheckbox settingsClickableLinks = ViewBindings.findChildViewById(rootView, id);
      if (settingsClickableLinks == null) {
        break missingId;
      }

      id = R.id.settings_clickable_links_holder;
      RelativeLayout settingsClickableLinksHolder = ViewBindings.findChildViewById(rootView, id);
      if (settingsClickableLinksHolder == null) {
        break missingId;
      }

      id = R.id.settings_color_customization_divider;
      View settingsColorCustomizationDivider = ViewBindings.findChildViewById(rootView, id);
      if (settingsColorCustomizationDivider == null) {
        break missingId;
      }

      id = R.id.settings_color_customization_holder;
      ConstraintLayout settingsColorCustomizationHolder = ViewBindings.findChildViewById(rootView, id);
      if (settingsColorCustomizationHolder == null) {
        break missingId;
      }

      id = R.id.settings_color_customization_label;
      MyTextView settingsColorCustomizationLabel = ViewBindings.findChildViewById(rootView, id);
      if (settingsColorCustomizationLabel == null) {
        break missingId;
      }

      id = R.id.settings_color_customization_section_label;
      TextView settingsColorCustomizationSectionLabel = ViewBindings.findChildViewById(rootView, id);
      if (settingsColorCustomizationSectionLabel == null) {
        break missingId;
      }

      CoordinatorLayout settingsCoordinator = (CoordinatorLayout) rootView;

      id = R.id.settings_cursor_placement;
      MyAppCompatCheckbox settingsCursorPlacement = ViewBindings.findChildViewById(rootView, id);
      if (settingsCursorPlacement == null) {
        break missingId;
      }

      id = R.id.settings_cursor_placement_holder;
      RelativeLayout settingsCursorPlacementHolder = ViewBindings.findChildViewById(rootView, id);
      if (settingsCursorPlacementHolder == null) {
        break missingId;
      }

      id = R.id.settings_display_success;
      MyAppCompatCheckbox settingsDisplaySuccess = ViewBindings.findChildViewById(rootView, id);
      if (settingsDisplaySuccess == null) {
        break missingId;
      }

      id = R.id.settings_display_success_holder;
      RelativeLayout settingsDisplaySuccessHolder = ViewBindings.findChildViewById(rootView, id);
      if (settingsDisplaySuccessHolder == null) {
        break missingId;
      }

      id = R.id.settings_enable_automatic_backups;
      MyAppCompatCheckbox settingsEnableAutomaticBackups = ViewBindings.findChildViewById(rootView, id);
      if (settingsEnableAutomaticBackups == null) {
        break missingId;
      }

      id = R.id.settings_enable_automatic_backups_holder;
      RelativeLayout settingsEnableAutomaticBackupsHolder = ViewBindings.findChildViewById(rootView, id);
      if (settingsEnableAutomaticBackupsHolder == null) {
        break missingId;
      }

      id = R.id.settings_enable_line_wrap;
      MyAppCompatCheckbox settingsEnableLineWrap = ViewBindings.findChildViewById(rootView, id);
      if (settingsEnableLineWrap == null) {
        break missingId;
      }

      id = R.id.settings_enable_line_wrap_holder;
      RelativeLayout settingsEnableLineWrapHolder = ViewBindings.findChildViewById(rootView, id);
      if (settingsEnableLineWrapHolder == null) {
        break missingId;
      }

      id = R.id.settings_export_notes_holder;
      RelativeLayout settingsExportNotesHolder = ViewBindings.findChildViewById(rootView, id);
      if (settingsExportNotesHolder == null) {
        break missingId;
      }

      id = R.id.settings_export_notes_label;
      MyTextView settingsExportNotesLabel = ViewBindings.findChildViewById(rootView, id);
      if (settingsExportNotesLabel == null) {
        break missingId;
      }

      id = R.id.settings_font_size;
      MyTextView settingsFontSize = ViewBindings.findChildViewById(rootView, id);
      if (settingsFontSize == null) {
        break missingId;
      }

      id = R.id.settings_font_size_holder;
      RelativeLayout settingsFontSizeHolder = ViewBindings.findChildViewById(rootView, id);
      if (settingsFontSizeHolder == null) {
        break missingId;
      }

      id = R.id.settings_font_size_label;
      MyTextView settingsFontSizeLabel = ViewBindings.findChildViewById(rootView, id);
      if (settingsFontSizeLabel == null) {
        break missingId;
      }

      id = R.id.settings_general_settings_divider;
      View settingsGeneralSettingsDivider = ViewBindings.findChildViewById(rootView, id);
      if (settingsGeneralSettingsDivider == null) {
        break missingId;
      }

      id = R.id.settings_general_settings_label;
      TextView settingsGeneralSettingsLabel = ViewBindings.findChildViewById(rootView, id);
      if (settingsGeneralSettingsLabel == null) {
        break missingId;
      }

      id = R.id.settings_gravity;
      MyTextView settingsGravity = ViewBindings.findChildViewById(rootView, id);
      if (settingsGravity == null) {
        break missingId;
      }

      id = R.id.settings_gravity_holder;
      RelativeLayout settingsGravityHolder = ViewBindings.findChildViewById(rootView, id);
      if (settingsGravityHolder == null) {
        break missingId;
      }

      id = R.id.settings_gravity_label;
      MyTextView settingsGravityLabel = ViewBindings.findChildViewById(rootView, id);
      if (settingsGravityLabel == null) {
        break missingId;
      }

      id = R.id.settings_holder;
      LinearLayout settingsHolder = ViewBindings.findChildViewById(rootView, id);
      if (settingsHolder == null) {
        break missingId;
      }

      id = R.id.settings_import_notes_holder;
      RelativeLayout settingsImportNotesHolder = ViewBindings.findChildViewById(rootView, id);
      if (settingsImportNotesHolder == null) {
        break missingId;
      }

      id = R.id.settings_import_notes_label;
      MyTextView settingsImportNotesLabel = ViewBindings.findChildViewById(rootView, id);
      if (settingsImportNotesLabel == null) {
        break missingId;
      }

      id = R.id.settings_language;
      MyTextView settingsLanguage = ViewBindings.findChildViewById(rootView, id);
      if (settingsLanguage == null) {
        break missingId;
      }

      id = R.id.settings_language_holder;
      RelativeLayout settingsLanguageHolder = ViewBindings.findChildViewById(rootView, id);
      if (settingsLanguageHolder == null) {
        break missingId;
      }

      id = R.id.settings_language_label;
      MyTextView settingsLanguageLabel = ViewBindings.findChildViewById(rootView, id);
      if (settingsLanguageLabel == null) {
        break missingId;
      }

      id = R.id.settings_manage_automatic_backups;
      MyTextView settingsManageAutomaticBackups = ViewBindings.findChildViewById(rootView, id);
      if (settingsManageAutomaticBackups == null) {
        break missingId;
      }

      id = R.id.settings_manage_automatic_backups_holder;
      RelativeLayout settingsManageAutomaticBackupsHolder = ViewBindings.findChildViewById(rootView, id);
      if (settingsManageAutomaticBackupsHolder == null) {
        break missingId;
      }

      id = R.id.settings_migrating_divider;
      View settingsMigratingDivider = ViewBindings.findChildViewById(rootView, id);
      if (settingsMigratingDivider == null) {
        break missingId;
      }

      id = R.id.settings_migrating_label;
      TextView settingsMigratingLabel = ViewBindings.findChildViewById(rootView, id);
      if (settingsMigratingLabel == null) {
        break missingId;
      }

      id = R.id.settings_monospaced_font;
      MyAppCompatCheckbox settingsMonospacedFont = ViewBindings.findChildViewById(rootView, id);
      if (settingsMonospacedFont == null) {
        break missingId;
      }

      id = R.id.settings_monospaced_font_holder;
      RelativeLayout settingsMonospacedFontHolder = ViewBindings.findChildViewById(rootView, id);
      if (settingsMonospacedFontHolder == null) {
        break missingId;
      }

      id = R.id.settings_nested_scrollview;
      NestedScrollView settingsNestedScrollview = ViewBindings.findChildViewById(rootView, id);
      if (settingsNestedScrollview == null) {
        break missingId;
      }

      id = R.id.settings_saving_divider;
      View settingsSavingDivider = ViewBindings.findChildViewById(rootView, id);
      if (settingsSavingDivider == null) {
        break missingId;
      }

      id = R.id.settings_saving_label;
      TextView settingsSavingLabel = ViewBindings.findChildViewById(rootView, id);
      if (settingsSavingLabel == null) {
        break missingId;
      }

      id = R.id.settings_show_keyboard;
      MyAppCompatCheckbox settingsShowKeyboard = ViewBindings.findChildViewById(rootView, id);
      if (settingsShowKeyboard == null) {
        break missingId;
      }

      id = R.id.settings_show_keyboard_holder;
      RelativeLayout settingsShowKeyboardHolder = ViewBindings.findChildViewById(rootView, id);
      if (settingsShowKeyboardHolder == null) {
        break missingId;
      }

      id = R.id.settings_show_note_picker;
      MyAppCompatCheckbox settingsShowNotePicker = ViewBindings.findChildViewById(rootView, id);
      if (settingsShowNotePicker == null) {
        break missingId;
      }

      id = R.id.settings_show_note_picker_holder;
      RelativeLayout settingsShowNotePickerHolder = ViewBindings.findChildViewById(rootView, id);
      if (settingsShowNotePickerHolder == null) {
        break missingId;
      }

      id = R.id.settings_show_word_count;
      MyAppCompatCheckbox settingsShowWordCount = ViewBindings.findChildViewById(rootView, id);
      if (settingsShowWordCount == null) {
        break missingId;
      }

      id = R.id.settings_show_word_count_holder;
      RelativeLayout settingsShowWordCountHolder = ViewBindings.findChildViewById(rootView, id);
      if (settingsShowWordCountHolder == null) {
        break missingId;
      }

      id = R.id.settings_startup_divider;
      View settingsStartupDivider = ViewBindings.findChildViewById(rootView, id);
      if (settingsStartupDivider == null) {
        break missingId;
      }

      id = R.id.settings_startup_label;
      TextView settingsStartupLabel = ViewBindings.findChildViewById(rootView, id);
      if (settingsStartupLabel == null) {
        break missingId;
      }

      id = R.id.settings_text_divider;
      View settingsTextDivider = ViewBindings.findChildViewById(rootView, id);
      if (settingsTextDivider == null) {
        break missingId;
      }

      id = R.id.settings_text_label;
      TextView settingsTextLabel = ViewBindings.findChildViewById(rootView, id);
      if (settingsTextLabel == null) {
        break missingId;
      }

      id = R.id.settings_toolbar;
      MaterialToolbar settingsToolbar = ViewBindings.findChildViewById(rootView, id);
      if (settingsToolbar == null) {
        break missingId;
      }

      id = R.id.settings_use_english;
      MyAppCompatCheckbox settingsUseEnglish = ViewBindings.findChildViewById(rootView, id);
      if (settingsUseEnglish == null) {
        break missingId;
      }

      id = R.id.settings_use_english_holder;
      RelativeLayout settingsUseEnglishHolder = ViewBindings.findChildViewById(rootView, id);
      if (settingsUseEnglishHolder == null) {
        break missingId;
      }

      id = R.id.settings_use_incognito_mode;
      MyAppCompatCheckbox settingsUseIncognitoMode = ViewBindings.findChildViewById(rootView, id);
      if (settingsUseIncognitoMode == null) {
        break missingId;
      }

      id = R.id.settings_use_incognito_mode_holder;
      RelativeLayout settingsUseIncognitoModeHolder = ViewBindings.findChildViewById(rootView, id);
      if (settingsUseIncognitoModeHolder == null) {
        break missingId;
      }

      id = R.id.settings_widget_color_customization_holder;
      ConstraintLayout settingsWidgetColorCustomizationHolder = ViewBindings.findChildViewById(rootView, id);
      if (settingsWidgetColorCustomizationHolder == null) {
        break missingId;
      }

      id = R.id.settings_widget_color_customization_label;
      MyTextView settingsWidgetColorCustomizationLabel = ViewBindings.findChildViewById(rootView, id);
      if (settingsWidgetColorCustomizationLabel == null) {
        break missingId;
      }

      return new ActivitySettingsBinding((CoordinatorLayout) rootView, settingsAutosaveNotes,
          settingsAutosaveNotesHolder, settingsBackupsLabel, settingsClickableLinks,
          settingsClickableLinksHolder, settingsColorCustomizationDivider,
          settingsColorCustomizationHolder, settingsColorCustomizationLabel,
          settingsColorCustomizationSectionLabel, settingsCoordinator, settingsCursorPlacement,
          settingsCursorPlacementHolder, settingsDisplaySuccess, settingsDisplaySuccessHolder,
          settingsEnableAutomaticBackups, settingsEnableAutomaticBackupsHolder,
          settingsEnableLineWrap, settingsEnableLineWrapHolder, settingsExportNotesHolder,
          settingsExportNotesLabel, settingsFontSize, settingsFontSizeHolder, settingsFontSizeLabel,
          settingsGeneralSettingsDivider, settingsGeneralSettingsLabel, settingsGravity,
          settingsGravityHolder, settingsGravityLabel, settingsHolder, settingsImportNotesHolder,
          settingsImportNotesLabel, settingsLanguage, settingsLanguageHolder, settingsLanguageLabel,
          settingsManageAutomaticBackups, settingsManageAutomaticBackupsHolder,
          settingsMigratingDivider, settingsMigratingLabel, settingsMonospacedFont,
          settingsMonospacedFontHolder, settingsNestedScrollview, settingsSavingDivider,
          settingsSavingLabel, settingsShowKeyboard, settingsShowKeyboardHolder,
          settingsShowNotePicker, settingsShowNotePickerHolder, settingsShowWordCount,
          settingsShowWordCountHolder, settingsStartupDivider, settingsStartupLabel,
          settingsTextDivider, settingsTextLabel, settingsToolbar, settingsUseEnglish,
          settingsUseEnglishHolder, settingsUseIncognitoMode, settingsUseIncognitoModeHolder,
          settingsWidgetColorCustomizationHolder, settingsWidgetColorCustomizationLabel);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
