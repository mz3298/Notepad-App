// Generated by view binder compiler. Do not edit!
package com.simplemobiletools.notes.pro.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.RadioGroup;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.simplemobiletools.commons.views.MyAppCompatCheckbox;
import com.simplemobiletools.commons.views.MyCompatRadioButton;
import com.simplemobiletools.notes.pro.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DialogSortChecklistBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final LinearLayout dialogHolder;

  @NonNull
  public final View moveUndoneChecklistItemsDivider;

  @NonNull
  public final MyAppCompatCheckbox settingsMoveUndoneChecklistItems;

  @NonNull
  public final RelativeLayout settingsMoveUndoneChecklistItemsHolder;

  @NonNull
  public final View sortingDialogOrderDivider;

  @NonNull
  public final MyCompatRadioButton sortingDialogRadioAscending;

  @NonNull
  public final MyCompatRadioButton sortingDialogRadioCustom;

  @NonNull
  public final MyCompatRadioButton sortingDialogRadioDateCreated;

  @NonNull
  public final MyCompatRadioButton sortingDialogRadioDescending;

  @NonNull
  public final RadioGroup sortingDialogRadioOrder;

  @NonNull
  public final RadioGroup sortingDialogRadioSorting;

  @NonNull
  public final MyCompatRadioButton sortingDialogRadioTitle;

  private DialogSortChecklistBinding(@NonNull LinearLayout rootView,
      @NonNull LinearLayout dialogHolder, @NonNull View moveUndoneChecklistItemsDivider,
      @NonNull MyAppCompatCheckbox settingsMoveUndoneChecklistItems,
      @NonNull RelativeLayout settingsMoveUndoneChecklistItemsHolder,
      @NonNull View sortingDialogOrderDivider,
      @NonNull MyCompatRadioButton sortingDialogRadioAscending,
      @NonNull MyCompatRadioButton sortingDialogRadioCustom,
      @NonNull MyCompatRadioButton sortingDialogRadioDateCreated,
      @NonNull MyCompatRadioButton sortingDialogRadioDescending,
      @NonNull RadioGroup sortingDialogRadioOrder, @NonNull RadioGroup sortingDialogRadioSorting,
      @NonNull MyCompatRadioButton sortingDialogRadioTitle) {
    this.rootView = rootView;
    this.dialogHolder = dialogHolder;
    this.moveUndoneChecklistItemsDivider = moveUndoneChecklistItemsDivider;
    this.settingsMoveUndoneChecklistItems = settingsMoveUndoneChecklistItems;
    this.settingsMoveUndoneChecklistItemsHolder = settingsMoveUndoneChecklistItemsHolder;
    this.sortingDialogOrderDivider = sortingDialogOrderDivider;
    this.sortingDialogRadioAscending = sortingDialogRadioAscending;
    this.sortingDialogRadioCustom = sortingDialogRadioCustom;
    this.sortingDialogRadioDateCreated = sortingDialogRadioDateCreated;
    this.sortingDialogRadioDescending = sortingDialogRadioDescending;
    this.sortingDialogRadioOrder = sortingDialogRadioOrder;
    this.sortingDialogRadioSorting = sortingDialogRadioSorting;
    this.sortingDialogRadioTitle = sortingDialogRadioTitle;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogSortChecklistBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogSortChecklistBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_sort_checklist, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogSortChecklistBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      LinearLayout dialogHolder = (LinearLayout) rootView;

      id = R.id.move_undone_checklist_items_divider;
      View moveUndoneChecklistItemsDivider = ViewBindings.findChildViewById(rootView, id);
      if (moveUndoneChecklistItemsDivider == null) {
        break missingId;
      }

      id = R.id.settings_move_undone_checklist_items;
      MyAppCompatCheckbox settingsMoveUndoneChecklistItems = ViewBindings.findChildViewById(rootView, id);
      if (settingsMoveUndoneChecklistItems == null) {
        break missingId;
      }

      id = R.id.settings_move_undone_checklist_items_holder;
      RelativeLayout settingsMoveUndoneChecklistItemsHolder = ViewBindings.findChildViewById(rootView, id);
      if (settingsMoveUndoneChecklistItemsHolder == null) {
        break missingId;
      }

      id = R.id.sorting_dialog_order_divider;
      View sortingDialogOrderDivider = ViewBindings.findChildViewById(rootView, id);
      if (sortingDialogOrderDivider == null) {
        break missingId;
      }

      id = R.id.sorting_dialog_radio_ascending;
      MyCompatRadioButton sortingDialogRadioAscending = ViewBindings.findChildViewById(rootView, id);
      if (sortingDialogRadioAscending == null) {
        break missingId;
      }

      id = R.id.sorting_dialog_radio_custom;
      MyCompatRadioButton sortingDialogRadioCustom = ViewBindings.findChildViewById(rootView, id);
      if (sortingDialogRadioCustom == null) {
        break missingId;
      }

      id = R.id.sorting_dialog_radio_date_created;
      MyCompatRadioButton sortingDialogRadioDateCreated = ViewBindings.findChildViewById(rootView, id);
      if (sortingDialogRadioDateCreated == null) {
        break missingId;
      }

      id = R.id.sorting_dialog_radio_descending;
      MyCompatRadioButton sortingDialogRadioDescending = ViewBindings.findChildViewById(rootView, id);
      if (sortingDialogRadioDescending == null) {
        break missingId;
      }

      id = R.id.sorting_dialog_radio_order;
      RadioGroup sortingDialogRadioOrder = ViewBindings.findChildViewById(rootView, id);
      if (sortingDialogRadioOrder == null) {
        break missingId;
      }

      id = R.id.sorting_dialog_radio_sorting;
      RadioGroup sortingDialogRadioSorting = ViewBindings.findChildViewById(rootView, id);
      if (sortingDialogRadioSorting == null) {
        break missingId;
      }

      id = R.id.sorting_dialog_radio_title;
      MyCompatRadioButton sortingDialogRadioTitle = ViewBindings.findChildViewById(rootView, id);
      if (sortingDialogRadioTitle == null) {
        break missingId;
      }

      return new DialogSortChecklistBinding((LinearLayout) rootView, dialogHolder,
          moveUndoneChecklistItemsDivider, settingsMoveUndoneChecklistItems,
          settingsMoveUndoneChecklistItemsHolder, sortingDialogOrderDivider,
          sortingDialogRadioAscending, sortingDialogRadioCustom, sortingDialogRadioDateCreated,
          sortingDialogRadioDescending, sortingDialogRadioOrder, sortingDialogRadioSorting,
          sortingDialogRadioTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
